---
title: "Interactive Dashboard"
format: pdf
execute:
  echo: FALSE
editor: visual
html:
  fig-width: 30
  fig-height: 20
---

#### AUTHORS

Nicholas Medizza, Santiago Camargo Carrillo, Joao Aires

# Introduction

The increasing amount of data in the football world create an opportunity to implement statistic analysis in order to try to find new patterns and develop models to predict for example number of goals scored and probability of winning.

Given that our data for this project are not well suited to develope statistic models, we decided to implement a descriptive statistical analysis.

The scope of this project is to develop an interactive dashboard with the aim to help football fans navigate through different plots and tables and discover how teams across different leagues performed from the season 2014/2015 to 2019/2020.

# Data

Our data was downloaded from the website Kaggle (`https://www.kaggle.com/datasets/slehkyi/extended-football-stats-for-european-leagues-xg`) and the two main datasets that have been used are data from each given match played by teams in the top 5 european leagues for 6 seasons (from the season starting in 2014 until the one that began in 2019). The second dataset contains the final position for each league along with related information for the same years. All the columns in the dataset and their respective meaning are reported below.

The standard columns are **league**, **year**, **position**, **scored** (for goals scored), **missed** (for goals conceded), **result**, **date**, **team**, **wins** (for amount of matches won), **draws** (for amount of matches drawed), **loses** (for amount of matches lost), **pts** (for total points), **team**, **position**, **matches** (for amount of matches played) and **h_a** (stating if the match was played at home or away).

Additional metrics are:

**xG** - expected goals, which is a representation of the chances created during the match.

**xGA** - expected goals against, which is a representation of the chances created by the opponent during the match.

**npxG** - expected goals without penalties and own goals.

**npxGA** - expected goals against without penalties and own goals.

**deep** - passes completed within an estimated 20 yards of goal (crosses excluded).

**deep_allowed** - opponent passes completed within an estimated 20 yards of goal (crosses excluded).

**xpts** - expected points, representing the points earned in the match according to the chances created by both teams.

**npxGD** - difference between expected goals scored and expected goals conceded without penalties and own goals.

**ppda_coef** - passes allowed per defensive action in the opposition half (power of pressure).

**oppda_coef** - opponent passes allowed per defensive action in the opposition half (power of opponent's pressure).

**xG_diff** - difference between expected goals scored and actual goals scored.

**xGA_diff** - difference between expected goals conceded and actual goals conceded.

**xpts_diff** - difference between expected points and actual points for the match.

Below are reported the first rows for the two dataset.

```{r, message = FALSE}
library(tidyverse)
data_per_club <- read_csv("data/understat_per_game.csv", show_col_types = FALSE)
data_per_game <- read_csv("data/understat.com.csv", show_col_types = FALSE)

# print the dataset with information per game 
print(as_tibble(data_per_club))

# print the dataset with information per club
print(as_tibble(data_per_game))


```

First, the column names of both data frames were changed so that they were more organized and explicit to the variable they represented. Additionally, the data for the Russian league was excluded, as the interest lies in the top 5 European leagues.

A data validation was carried out for both data sets, checking for missing values (all the rows were complete), possible errors or typos in the data, atypical results that could be an error (which were then verified) and overall coherence and consistency of the data.

The information of our datasets is updated as of 01/08/2020, so there are 5 missing matches from the 2019/2020 Serie A, which took place in 02/08/2020. We considered trying to gather the information of these matches but we didn't manage to find the metrics, so we decided to work without this information.

Aditionally, the 2019/2020 Ligue 1 was not completed due to COVID 19, so not all matches were played for this season. However, the information of all the matches that were played is in the datasets, so we decided to include this season for our visualization.

As it is shown above, the dataset containing the information per game is given for each team and match. However, we don't have the information regarding which team was the opponent for each specific match. This information is contained (implicitly) in the same data, as every match appears as a duplicate for both teams. Therefore, it is easy to recover this data and create the column **opponent** to have this information now explicitly as part of the data frame.

```{r setup, include = FALSE}
library(tidyverse)
library(ggrepel)
library(ggplot2)
#knitr::opts_chunk$set(fig.width = 5)


#read the data
data1 <- read_csv(file = "data/understat_per_game.csv")
data2 <- read_csv(file = "data/understat.com.csv")

colnames_1 = c("league", "year", "stadium", "exp_goal", "exp_goal_against", 
               "no_pen_exp_goal", "no_pen_exp_goal_against", "deep", 
               "deep_allowed", "scored", "conceded", "exp_pts", "result", "date", 
               "wins", "draws", "loses", "pts", "no_pen_exp_goal_diff", "ppda_coef", 
               "ppda_att", "ppda_def", "oppda_coef", "oppda_att", "oppda_def", 
               "team", "exp_goal_diff", "exp_goal_against_diff", 
               "exp_pts_diff")

colnames(data1) = colnames_1

colnames_2 = c("league", "year", "position", "team", "matches", "wins", "draws", 
               "loses", "scored", "conceded", "pts", "exp_goal", "exp_goal_diff", 
               "no_pen_exp_goal", "exp_goal_against", "exp_goal_against_diff", 
               "no_pen_exp_goal_against", 
               "no_pen_exp_goal_diff", "ppda_coef", "oppda_coef", "deep", 
               "deep_allowed", "exp_pts", "exp_pts_diff")

colnames(data2) = colnames_2

data_per_game <- data1 |> 
  mutate("stadium" = as.factor(stadium), 
         "result" = as.factor(result), 
         "league" = as.factor(league),
         "pts" = as.factor(pts)) |> 
  filter(league != "RFPL")

data_per_club <- data2 |> 
  filter(league != "RFPL") |> 
  mutate("goal_diff" = scored - conceded)

## Check to see no duplicates and the pairing of opponent is done correctly on a 1-1 basis
length(data_per_game$league[duplicated(cbind(data_per_game$league, 
                                             data_per_game$year, 
                                             data_per_game$date, 
                                             data_per_game$scored, 
                                             data_per_game$conceded, 
                                             data_per_game$exp_goal_against, 
                                             data_per_game$exp_goal, 
                                             data_per_game$ppda_coef, 
                                             data_per_game$oppda_coef))])

## Link opponents to each respective match
temp_opponents = data_per_game |> select(league, year, date, scored, 
                                         conceded, exp_goal_against, exp_goal, 
                                         ppda_coef, oppda_coef, "opponent" = team)

data_per_game = data_per_game |> 
  left_join(temp_opponents, by = c("league" = "league", "year" = "year", 
                                   "date" = "date", "scored" = "conceded", 
                                   "conceded" = "scored", 
                                   "exp_goal_against" = "exp_goal", 
                                   "exp_goal" = "exp_goal_against", 
                                   "ppda_coef" = "oppda_coef", 
                                   "oppda_coef" = "ppda_coef"))


## Df created for plot 5 and 6 (Joao)
wins_home <- data_per_game |>
  filter(result =="w", stadium == "h") |>
  group_by(year, league, team) |>
  summarize(home_wins = n())

wins_away <- data_per_game |>
  filter(result =="w", stadium != "h") |>
  group_by(year, league, team) |>
  summarize(away_wins = n())

winjoin <- full_join(wins_home, wins_away, by = c("year", "league", "team"))

data_selected <- data_per_club |>
  select(year, league, team, position)

wins <- winjoin |>
  left_join(data_selected, by = c("year", "league", "team")) |>
  filter(position < 5)

```


# EDA

**Team**

```{r message=FALSE}
data_per_game |> 
    filter((team == "Augsburg" | team == "Schalke 04") & 
             year == 2014) |> 
    group_by(team) |> 
    mutate("match" = c(1:n()), pts = as.numeric(as.character(pts))) |> 
    ungroup() |> 
    group_by(team, match) |> 
    summarize(pts = sum(pts)) |> 
    mutate(pts_cum = cumsum(pts)) |> 
    ggplot(mapping = aes(match, pts_cum, color = team)) + 
    geom_line() + 
    geom_point() + 
    labs(x = "Match Day", y = "Cummulative Points") + 
    theme_bw()

```

We compute the sum of points acquired for each match day by 2 teams through the season. It enables us to compare their performance, assess the intensity level and depict the turning points.

```{r message=FALSE}
data_per_game |> 
    filter(league == "Bundesliga", 
           team == "Augsburg", 
           year == 2014) |> 
    group_by(team) |> 
    mutate("match" = c(1:n()), pts = as.numeric(as.character(pts))) |> 
    ungroup() |> 
    ggplot() + 
    geom_line(mapping = aes(match, exp_goal, color = "Expected Goals"), 
              show.legend = TRUE) + 
    geom_point(mapping = aes(match, exp_goal, color = "Expected Goals"), 
              show.legend = TRUE) + 
    geom_line(mapping = aes(match, scored, color = "Goals Scored"), 
              show.legend = TRUE) + 
    geom_point(mapping = aes(match, scored, color = "Goals Scored"), 
              show.legend = TRUE) + 
    scale_color_manual("", breaks = c("Expected Goals", "Goals Scored"), 
                       values = c("red", "blue")) + 
    labs(x = "Match Day", y = "Goals / Expected Goals") + 
    theme_bw()
```

We use here 2 variables "Goals scored" and "Expected goals scored" for each match day. The aim is to measure the level of scoring performance through the season.

**National league**

In this part, we have analyzed how the values of the variables are spread, analyze the interactions between potential couples and choose the most relevant ones in order to get interesting and understandable results. Especially, to get a broader but brighter view of our research.

**Analysis of the team net performance according to its ranking and its evolution through the years**

First, we analyze the net performance of a team according to their ranking by using the goals difference variable. Moreover, we add the expected goals difference which, coupled with the goals difference line, will indicate performance trends all along the ranking.

```{r message=FALSE}
data_per_club |> 
    filter(league == "EPL", year == 2014) |>
    ggplot() +
    geom_line(aes(x=position, y=goal_diff, color = "Goals difference")) +
    geom_point(aes(x=position, y=goal_diff, color = "Goals difference")) +
    geom_line(aes(x=position, y=no_pen_exp_goal_diff, color = "Expected goals difference")) +
    geom_point(aes(x=position, y=no_pen_exp_goal_diff, color = "Expected goals difference")) +
    scale_y_continuous(breaks = seq(-70,100, by = 5)) +
    scale_x_continuous(breaks = seq(1,20,  by = 1)) +
    theme_bw() +
    labs(title = "Study the impact of overall team net performance according to ranking position",
         x = "Ranking position",
         y = "Difference of goals",
         color = "Graph legend",  #In order to change the colour name
         scale_colour_manual("Graph legend", 
                             breaks = c("Goals difference", 
                                        "Expected goals difference"), 
                             values = c("red","green"))) +
    theme(plot.title = element_text(hjust = 0.5))
```

We notice that first ranked teams over-perform because their attack and defense were better than expected. Conversely, the lowest-ranked teams under-perform. However, there is no dominant trend between middle ranked teams. So, this fact is reiterated throughout all the years and leagues (The data used comes from the Premier League season 2014/2015).

Then, we can notice that both lines decrease. It brings out that the less a team has a difference of goals, the less their ranking is. So this result brings out that teams with a strong defense and a efficient attack have great chances to be high ranked. As depicted by the plot below, this pattern is prevailing throughout all the years for the five leagues of our research.

```{r message=FALSE}
custom_colors <- c("2014"= "darkgreen","2015"="darkseagreen","2016"="khaki","2017"="aquamarine","2018"="hotpink","2019"="deepskyblue")

data_per_club |>
    filter(league == "EPL") |>
    ggplot(aes(x=position, y = goal_diff, color = as.factor(year), group = as.factor(year))) +
    geom_smooth(se = FALSE) +
    scale_color_manual(values = custom_colors) +
    scale_x_continuous(breaks = seq(1,20, by = 1)) +
    scale_y_continuous(breaks = seq(-60,80, by = 10)) +
    theme_bw() +
    labs(title = "Evolution of overall team net performance throughout the years",
         x = "Ranking position",
         y = "Difference of goals",
         color = "Years") + 
    theme(plot.title = element_text(hjust = 0.5))

```

**Analysis on the impact of total wins (total losses) of a team on its goals scored per game (goals conceded per game)**

Next, we complement our mentioned approach by interacting the average of goals scored per game and the total wins of a team. Indeed, this approach makes the comparison between teams more "harmonious" since the total of games played are not the same in each league (this is the case of Bundesliga in which 34 games are played). (The scope of study uses the data of the Premier League for the season 2018/2019)

```{r message=FALSE}
data_per_club |>
    filter(league == "EPL", year == 2018) |>
    mutate(Average_goalscored_per_game = scored/matches,
           Average_goalsconceded_per_game = conceded/matches) |>
    ggplot(aes(x=wins,y=Average_goalscored_per_game)) +
    geom_point(aes(color = team)) +
    geom_point(size = 2.5, shape = 1) +
    geom_smooth(se=FALSE) +
    scale_x_continuous(breaks = seq(0,38, by = 1)) +
    scale_y_continuous(breaks = seq(0.50,3, by = 0.25 )) +
    theme_bw() +
    labs(title = "Study the impact of total wins of a team on its goals scored per game",
         x = "Number of wins",
         y = "Goals scored per game",
         color = "Teams",
         caption = "The numbers inside the box are the ranking of the team") +
    ggrepel::geom_label_repel(aes(label=position), max.overlaps = Inf) + 
    theme(plot.title = element_text(hjust = 0.5))
```

This plot shows the link between the average of goals scored per game (in overall) on the total of games won by the team. The ranking of the teams is also added which links up to our previous analyses. And the blue lign represents the average trend of the data.

Firstly, we observe that we have a positive trend. Indeed, the more a team wins games, the more it has a higher ratio of goals scored per game. As this fact is strongly supported by the average trend lign. However, it doesn't mean the link is "linear" as we can note in other data settings.

Secondly, we discern that data are more or less concentrated on different areas. In this plot, we remark an area on the upper-right for 2 teams, in the middle for 4 dots and the remaining is spread out from the middle to the lower-left part. This spread inform about the average performance among the league; the more they are equally scattered along the lign, the less there are performance gaps among the teams, which means more balance. And vice-versa.

Conversely, we analyzed the link of the average of goals conceded per game and the total loses of a team. This complement and uphold our previous result which states that the more a team wins, the more he will score in average.

```{r message=FALSE}
data_per_club |>
    filter(league == "EPL", year == 2018) |>
    mutate(Average_goalscored_per_game = scored/matches,
           Average_goalsconceded_per_game = conceded/matches) |>
    ggplot(aes(x=loses, y=Average_goalsconceded_per_game)) +
    geom_point(aes(color = team)) +
    geom_point(size = 2.5, shape = 1) +
    geom_smooth(se=FALSE) +
    scale_x_reverse(breaks = seq(0,30,1)) +
    scale_y_continuous(breaks = seq(0.50,3, by = 0.25 )) +
    theme_bw() +
    labs(title = "Study the impact of total losses of a team on its goals conceded per game",
         x = "Number of loses",
         y = "Goals conceded per game",
         color = "Teams",
         caption = "The numbers inside the box are the ranking of the team") +
    ggrepel::geom_label_repel(aes(label=position), max.overlaps = Inf) + 
    theme(plot.title = element_text(hjust = 0.5))
```

**Analysis of a potential league champion due to its total of wins at home and away**

```{r message=FALSE}
wins |>
    filter(league == "EPL") |>
    ggplot(aes(x=position, y=home_wins, fill = team)) +
    geom_bar(stat = "identity", alpha = 0.75) +
    scale_y_continuous(breaks = seq(0,18, by=3)) +
    theme_bw() +
    labs(title = "Potential league champion due to wins at home",
         x = "Ranking in the league",
         y = "Number of wins at home",
         fill = "The top 4 teams") +
    theme(plot.title = element_text(hjust = 0.5)) +
    coord_flip() +
    facet_wrap(~year)
```

In this part, we used to study the total number of wins at home and away per season of for the 4 first high ranked teams. The goal is to show how much difference there is among those teams in order to assess the fairness of competition and a potential factor to determine the winner. Using both variables enable us to complement this approach. Take note of the assumption that games away are harder to win because of traveling constraints and the hostile atmosphere in the opponent's stadium. In overall, the champion wins the most at home and away games but this is not always the case.

```{r message=FALSE}
wins |>
      filter(league == "EPL") |>
      ggplot(aes(x=position, y=away_wins, fill = team)) +
      geom_bar(stat = "identity", alpha = 0.75) +
      scale_y_continuous(breaks = seq(0,18, by=3)) +
      theme_bw() +
      labs(title = "Potential league champion due to wins away",
           x = "Ranking in the league",
           y = "Number of wins away",
           fill = "The top 4 teams") +
      theme(plot.title = element_text(hjust = 0.5)) +
      coord_flip() +
      facet_wrap(~year)
```

**Comparison across leagues**

**Evolution of distribution of total goals scored and expected total goals scored for each league**

```{r message=FALSE}
data_per_club |> 
                                 ggplot() + 
                                 geom_boxplot(aes(league, exp_goal, color = "Exp Tot Goals" )) +
                                 geom_boxplot(aes(league, scored, color = "Tot goals scored")) +
                                 labs(x = "League",
                                      y = "Distribution of total goals scored") +
                                 scale_colour_manual("Exp goal per match", 
                                                     breaks = c("Exp Tot Goals", 
                                                                "Tot goals scored"), 
                                                     values = c("black","lightblue")) +
                                 facet_wrap(~ year) +
                                 theme_bw()
```

We created 2 kind of box-plots based on total goals scored and total expected goals scored for the five leagues to visualize the distribution of both trough the years. In overall, the total expected goal forecast pretty good since we don't notice huge gaps.

**Comparison of net team performance across the leagues**

```{r message=FALSE, warning=FALSE}
data_per_game <-data_per_game |> mutate("date" = as.Date(date, "%Y-%m-%d")) 

data_per_game1 <- data_per_game |> 
                  group_by(year, league, team) |> 
                  mutate("match_day" = row_number())

data_per_club |> filter(year == 2014, 
                          position <= 10) |> 
                     ggplot() + 
                     geom_line(aes(position, goal_diff, color = league)) + 
                     labs(x = "Teams ranked by final position",
                          y = "Difference between goals scored and conceded ",
                          color = "Top 5 leagues") +
                     geom_point(aes(position, goal_diff, color = league)) +
                     scale_x_continuous(breaks = seq(1,10, by = 2)) +
                     theme_bw()

```

As done in the league part, we have replicated the same plot on net team performance but across leagues. It enables to determine which league has the highest performances. We have restricted the number of teams in order to have a better display.

**Comparison of average teams' pressure across the leagues**

```{r message=FALSE}
data_per_club |> filter(year == 2014) |> 
                 group_by(league) |> summarise(avg_opp_pressure = mean(ppda_coef)) |>
                 ggplot() + 
                 geom_bar(aes(league, avg_opp_pressure), stat = "Identity") + 
                 labs(x = "Top five football leagues",
                      y = "Average teams' pressure per league ") +
                 theme_bw()
```

**Comparison of total goals scored per league and its volatility across leagues**

We compare the average pressure of each league among them by using the "ppda_coef" metric. It allows to determine which league has the highest game intensity.

**Comparison of total goals scored per league across leagues**

```{r message=FALSE}
data_per_game1 |> filter(year == 2014) |> 
  group_by(league, match_day) |> 
                    summarise(avg_goal_per_day = sum(scored)/(n()/2)) |>
               ggplot() + 
               geom_line(aes(match_day, 
                             avg_goal_per_day, 
                             color = league), 
                             linetype = 2) +
               geom_smooth(aes(match_day, 
                               avg_goal_per_day, 
                               color = league), se = FALSE) +
               labs(x = "Match Day",
                    y = "Average goal scored per match day") +
               theme_bw()
```

The dotted lines represent the average of goals scored per match day and the solid lines represent the trend. It shows how much variation of goals scored in average there is among the leagues. There is also the possibility to extend the analysis to all years.

**Comparison between average passes completed and average goals scored per match across leagues**

```{r message=FALSE}
data_per_club |> filter(year == 2014) |> group_by(league) |>
                   ggplot() + 
                   geom_point(aes(scored/matches, deep/matches)) +
                   geom_smooth(aes(scored/matches, deep/matches)) + 
                   labs(x = "Average goal scored per match played by the team",
                        y = "Average passages completed per match played by the team ") +
                   theme_bw() +
                   facet_wrap(~league)
```

**Analysis of winner league prediction across leagues**

We interact the average goals scored to the average passes completed among each league. We notice that the higher goals a team scores, the more he plays with ball.

**Analysis of winner league points prediction across leagues**

```{r message=FALSE}
data_per_club |> filter(position == 1, 
                             year == 2014) |> 
                      ggplot( aes(x = team)) + 
                      geom_bar(aes(y = exp_pts), position = "dodge", stat = "Identity") +
                      geom_point(aes(y = pts, color = "Points"), shape = 17, size = 3) + 
                      labs(x = "Winning teams for the top 5 leagues",
                           y = "Expected total points earned during a season ") +
                      scale_colour_manual("Total points", breaks = "Points", values = "blue") +
                      theme_bw()
```

We compare how accurate are the "expected points" metric across leagues.

# analysis

## Dashboard Presentation

As mentioned in the introduction our analysis with statistics and graphs is reported on the interactive dashboard that we have built. The dashboard is the structure with three main pages: the team page, the league page and the comparison across different leagues.

![DashBoard](Report_Dashboard_files/screenshots_Dashboard/tab.png)

### Team page

Using the sidebar provided on the left the user can choose the season's year, the league and a specific team.

![Drop Down Menu](Report_Dashboard_files/screenshots_Dashboard/drop_down_menu.png){height="300" fig-align="left"}

The first information shown is the most indicative of the performance of the selected team.

Are reported the final position in the ranking, number of wins and loses for matches played at home and away.

![Value Boxe](Report_Dashboard_files/screenshots_Dashboard/Value_boxes.png)

The second main feature is the possibility to compare the performance of the principal team with another selected team. A table shows for these two teams their historic results. Next to it there is a table race that compares their total points along the season. It gives us an indicator on the performance relative to the other team.

![DashBoard](Report_Dashboard_files/screenshots_Dashboard/head_to_head.png)

### Nation League page

The second page aims to give an overall understanding, for each of the five leagues, on how the teams performed relative to each other. The most important metrics used are the difference of goal scored per ranking position, the expected goals for a team and the expected goal against.

Selecting the year and league on the left of the dashboard, the graphs will change the information.

![leagues page overall view](Report_Dashboard_files/screenshots_Dashboard/League_1.png)
On the second part more interactive plots are shown

![League Page](Report_Dashboard_files/screenshots_Dashboard/League_2.png)

### Comparison across leagues

The last page of this dashboard aims to take into account all the five european leagues in order to asses which leagues performed better and which one is the most competitive.

The user can choose if to show all the leagues or only a subset of them.

At the top of the page are shown the teams that won the competition for each league, with the most principal information like number of wins, goal, expected goals etc.

![Summary table](Report_Dashboard_files/screenshots_Dashboard/Comparison_leagues.png)

![Difference of goals for the first 10th ranked teams, average pressure per league](Report_Dashboard_files/screenshots_Dashboard/comparison_across_leagues2.png)

![Trend in expected goal per match played](Report_Dashboard_files/screenshots_Dashboard/comparison_leagues_3.png)

![Total goals and total expected goals scored for each winning team, Total points and Total expected points](Report_Dashboard_files/screenshots_Dashboard/Comparison_leagues4.png)

# conclusion
