---
title: "Interactive Dashboard"
format: html
execute:
  echo: FALSE
editor: visual
html:
  fig-width: 7
  fig-height: 5
---

#### AUTHORS

Nicholas Medizza, Santiago Camargo Carrillo, Joao Aires

# Introduction

The increasing amount of data in the football world create an opportunity to implement statistic analysis in order to try to find new patterns and develop models to predict for example number of goals scored and probability of winning.

Given that our data for this project are not well suited to develope statistic model, we decided to implement a descriptive statistical analysis.

The scope of this project is to develop an interactive dashboard with the aim to help football fans navigate through different plots and tables and discover how teams across different leagues performed from the season 2014/2015 to 2019/2020.

# Data

Our data was downloaded from the website Kaggle (`https://www.kaggle.com/datasets/slehkyi/extended-football-stats-for-european-leagues-xg`) and the two main datasets that have been used are data from each given match played by teams in the top 5 european leagues for 6 seasons (from the season starting in 2014 until the one that began in 2019). The second dataset contains the final position for each league across with related information for the same years. All the columns in the dataset and their respective meaning is reported below.

The standard columns are **league**, **year**, **position**, **scored** (for goals scored), **missed** (for goals conceded), **result**, **date**, **team**, **wins** (for amount of matches won), **draws** (for amount of matches drawed), **loses** (for amount of matches lost), **pts** (for total points), **team**, **position**, **matches** (for amount of matches played) and **h_a** (stating if the match was played at home or away).

Additional metrics are:

**xG** - expected goals, which is a representation of the chances created during the match.

**xGA** - expected goals against, which is a representation of the chances created by the opponent during the match.

**npxG** - expected goals without penalties and own goals.

**npxGA** - expected goals against without penalties and own goals.

**deep** - passes completed within an estimated 20 yards of goal (crosses excluded).

**deep_allowed** - opponent passes completed within an estimated 20 yards of goal (crosses excluded).

**xpts** - expected points, representing the points earned in the match according to the chances created by both teams.

**npxGD** - difference between expected goals scored and expected goals conceded without penalties and own goals.

**ppda_coef** - passes allowed per defensive action in the opposition half (power of pressure).

**oppda_coef** - opponent passes allowed per defensive action in the opposition half (power of opponent's pressure).

**xG_diff** - difference between expected goals scored and actual goals scored.

**xGA_diff** - difference between expected goals conceded and actual goals conceded.

**xpts_diff** - difference between expected points and actual points for the match.

**"ppda_att" "ppda_def" "oppda_att" "oppda_def" MISSING THESE VARIABLES**

**DO WE WANT TO JUSTIFY THE TEXT?**

Below are reported the first rows for the two dataset.

```{r, message = FALSE}
library(tidyverse)
data_per_club <- read_csv("data/understat_per_game.csv", show_col_types = FALSE)
data_per_game <- read_csv("data/understat.com.csv", show_col_types = FALSE)

# print the dataset with information per game 
print(as_tibble(data_per_club))

# print the dataset with information per club
print(as_tibble(data_per_game))


```

First, the column names of both data frames were changed so that they were more organized and explicit to the variable they represented. Additionally, the data for the Russian league was excluded, as the interest lies in the top 5 European leagues.

As it is shown above, the dataset containing the information per game is given for each team and match. However, we don't have the information regarding which team was the opponent for each specific match. This information is contained (implicitly) in the same data, as every match appears as a duplicate for both teams. Therefore, it is easy to recover this data and create the column **opponent** to have this information now explicitly as part of the data frame.

```{r}



```

```{r}



```

# eda

# analysis

# conclusion
